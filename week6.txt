q1
#include <cstring>
#include <iostream>
#include <string.h>

using namespace std;

class CompareString {

public:

	char str[25];
	CompareString(char str1[])
	{
		strcpy(this->str, str1);
	}
	int operator==(CompareString s2)
	{
		if (strcmp(str, s2.str) == 0)
			return 1;
		else
			return 0;
	}
	int operator<=(CompareString s3)
	{
		if (strlen(str) <= strlen(s3.str))
			return 1;
		else
			return 0;
	}
	int operator>=(CompareString s3)
	{
		if (strlen(str) >= strlen(s3.str))
			return 1;
		else
			return 0;
	}
};

void compare(CompareString s1, CompareString s2)
{

	if (s1 == s2)
		cout << s1.str << " is equal to "
			<< s2.str << endl;
	else {
		cout << s1.str << " is not equal to "
			<< s2.str << endl;
		if (s1 >= s2)
			cout << s1.str << " is greater than "
				<< s2.str << endl;
		else
			cout << s2.str << " is greater than "
				<< s1.str << endl;
	}
}

// Testcase1
void testcase1()
{
	// Declaring two strings
	char str1[] = "Prateek";
	char str2[] = "Rishi";

	// Declaring and initializing the class
	// with above two strings
	CompareString s1(str1);
	CompareString s2(str2);

	cout << "Comparing \"" << s1.str << "\" and \""
		<< s2.str << "\"" << endl;

	compare(s1, s2);
}

// Testcase2
void testcase2()
{
	// Declaring two strings
	char str1[] = "Prateek";
	char str2[] = "Prateek";

	// Declaring and initializing the class
	// with above two strings
	CompareString s1(str1);
	CompareString s2(str2);

	cout << "\n\nComparing \"" << s1.str << "\" and \""
		<< s2.str << "\"" << endl;

	compare(s1, s2);
}

// Driver code
int main()
{
	testcase1();
	testcase2();

	return 0;
}
q2
#include <iostream>  
    using namespace std;  
    class Complex_num  
    {  
        int x, y;  
        public:  
            void inp()  
            {  
                cout << " Input two complex number: " << endl;  
                cin >> x >> y;  
            }         
            Complex_num operator + (Complex_num obj)  
            {  
                Complex_num A;  
                A.x = x + obj.x;  
                A.y = y + obj.y;  
                return (A);  
            }         
            Complex_num operator - (Complex_num obj)  
            {  
                Complex_num A;  
                A.x = x - obj.x;  
                A.y = y - obj.y;  
                return (A);  
            }         
            void print()  
            {  
                cout << x << " + " << y << "i" << "\n";  
            }  
            void print2()  
            {  
                cout << x << " - " << y << "i" << "\n";  
            }  
    };  
    int main ()  
    {  
    Complex_num x1, y1, sum, sub;   
        x1.inp();  
        y1.inp();     
        sum = x1 + y1;  
        sub = x1 - y1;  
        cout << "\n Entered values are: \n";  
        cout << " \t";  
        x1.print();  
        cout << " \t";  
        y1.print();   
        cout << "\n The addition of two complex (real and imaginary) numbers: ";  
        sum.print(); 
        cout << "\n The subtraction of two complex (real and imaginary) numbers: ";  
        sub.print2(); 
        return 0;  
    }  
q4
#include<iostream>
using namespace std;
class counter
{
int count;
public:
counter()
{
        count=0;
}
int get_count()
{
return count;
}
void operator++()
{
count++;
}
};
 
int main()
{
counter c1,c2;
cout<<"\nC1 ="<<c1.get_count();
cout<<"\nC2 ="<<c2.get_count();
 
c1++;           
c2++;
++c2;
cout<<"\nC1 ="<<c1.get_count();
cout<<"\nC2 ="<<c2.get_count();
return 0;
}
q9
#include<iostream>
#include<string.h>
using namespace std;

class func
{
        public:
                void pal(int );
                void pal(char c[]);
};
void func :: pal(int n)
{
        int n1,sum,a;
        n1=n;
        sum=0;

        do
        {
                sum=sum*10;
                a=n%10;
                sum=sum+a;
                n=n/10;
        }while(n>0);
        if(sum==n1)
                cout<<"\n it is Palindrome";
        else
                cout<<"\n it is not a palindrome";

}
void func :: pal(char c[])
{
        int l=strlen(c);
        char b[10];
        int i,j;
        for(i=0,j=l-1;i<l;i++,j--)
        {
                b[i]=c[j];
        }
        b[i]=' ';
        if(strcmp(c,b)==0)
        {cout<<"\nThe entered text is palindrome";
        }
        else
        {cout<<"\n the entered text is not a palindrome";
        }
}
int main()
{
        char c[10];
        int k,r,v;
        func p;
        do
        {
                cout<<"palindrome"<<endl;
                cout<<"1.for interger"<<endl;
                cout<<"2.for character"<<endl;
                cout<<"\nenter the choice\n"<<endl;
                cin>>r;
                switch(r)
                {
                        case 1:
                                cout<<"Enter the number";
                                cin>>k;
                                p.pal(k);
                                break;

                        case 2:
                                cout<<"\nEnter the string to be checked"<<endl;
                                cin>>c;
                                p.pal(c);
                                break;
                }
                cout<<"\ndo you want to continue? (1/0)"<<endl;
                cin>>v;
        }while(v==1);
        return 0;
}